/******************************************************************************

                            Dhameliya_Sanny
                                DA-IICT
                          B-Tech(second year)
                            

*******************************************************************************/
#include "bits/stdc++.h"
#include <stdio.h>
using namespace std;

/*******  All Required define Pre-Processors and typedef Constants *******/
#define ll long long int 
#define loop(i,l,k) for (int i=l ; i<k ; i++)
#define rloop(i,l,k) for(int i=l-1;i>=k;i--)
#define pb push_back
#define F first
#define S second
#define all(c) (c).begin(),(c).end()
#define sz(v) (int)(v).size()
#define fast ios::sync_with_stdio(0); cin.tie(0); cout.tie(0)
typedef long double lld;
typedef pair<long long int,long long int> pll;
typedef vector<long long int > vi;
typedef vector<pair<long long,long long> > vpll;
#define MOD 998244353
#define N 500005
#define INF 1e9
#define NINF -1e9

//vector<vector<int>> vec( n , vector<int> (m, 0));
 // uniqe values in arry ==> A.erase(unique(A.begin(), A.end()), A.end());

// priority_queue<int> gquiz;
//  priority_queue <int, vector<int>, greater<int> > pq;
//set<int> s(arr, arr + n);
//set<int>::iterator itr = s.begin(); // s.begin() returns a pointer to first // element in the set
// advance(itr, k - 1); // itr points to kth element in set

 
ll solve()
{
     ll n,k;
     cin>>n;

     vector<ll>v(n,0);

     loop(i,0,n)
     cin>>v[i];


    cin>>k;

     vector<vector<ll>>dp(k+1,vector<ll>(n+1,0));

     loop(i,1,k+1)
     {
        loop(j,1,n+1)
        {
             dp[i][j]=dp[i][j-1]; // using j-1 element how many way then we get less then i multiplication

             if(i < v[j-1])   // if j th element grt then i th maltiplicatio then cant't add in ans;
               continue;

             // else --> we use j the element and add the ans at i' = i/v[j-1] becuse  i'* v[j-1] < i so max val is i=i'*v[j-1]
             
             dp[i][j]=dp[i][j]+dp[i/v[j-1]][j-1] + 1; // hear dp[i'][j-1] becuse without jth element how many subsequnce uisng less then i' ... hear i' * jth element < i condition satisfy and add one for signal elemtn

        }
     }
    
    cout<<dp[k][n]<<endl;

}

int main()
{

      ios_base::sync_with_stdio(false);
      cin.tie(NULL);

      #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      freopen("output1.txt", "w", stdout);
      #endif  
    
   
      ll t=1;
    // cin>>t;

       

     while(t--)
     {
        //cout<<"hii"<<endl;

         solve();
     }

    #ifndef ONLINE_JUDGE
     cout << "\nTime Elapsed: " << (1000.0 * clock()) / CLOCKS_PER_SEC << " ms \n";
    #endif

    return 0;
}