 int editDistance(string s, string t) 
    {
       int n=s.size();
       int m=t.size();
       int dp[n+1][m+1];
       
       memset(dp,0,sizeof(dp));
       
       for(int i=0;i<=n;i++)
       {
           for(int j=0;j<=m;j++)
           {
               if(i==0 && j==0)
               {
                dp[i][j]=0;   
               }
               else if(i==0)
               {
                   dp[i][j]=j;
               }
               else if(j==0)
               {
                   dp[i][j]=i;
               }
               else if(s[i-1]==t[j-1])
               {
                   dp[i][j]=dp[i-1][j-1];
               }
               else
               {
                   dp[i][j]=min(dp[i-1][j-1],min(dp[i-1][j],dp[i][j-1]))+1;
                   
                   /*
                      if(s[n-1]==t[m-1])
                       fun(n-1,m-1)
                       else
                       1. fun(n-1,m)  --->insert then m chang m+1  and then m
                       2. fun(n,m-1)   -->delat char in m chang m-1;
                       3. fun(n-1,m-1)  --->rplace char so both len decresing
                       
                       min of all and + 1
                   */
               }
           }
       }
       
      
       
       return dp[n][m];
    }