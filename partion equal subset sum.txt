 int fun(int n,int arr[],int sum,int index)
    {
        if(sum==0)
        return 1;
        
        if(index==n)
        return 0;
        
        if(sum < arr[index])
        return fun(n,arr,sum,index+1);
        
        
        return fun(n,arr,sum-arr[index],index+1)||fun(n,arr,sum,index+1);
        
    }
    int equalPartition(int N, int arr[])
    {
        int sum=0;
        
        for(int i=0;i<N;i++)
        sum=sum+arr[i];
        
        if(sum%2==1)
        return 0;
        
       bool dp[(sum/2)+1][N+1];
       
       
       for(int i=0;i<=(sum/2);i++)
          dp[i][0]=false;
          
          for(int j=0;j<=N;j++)
            dp[0][j]=true;
        
        for(int i=1;i<=(sum/2);i++)
        {
            for(int j=1;j<=N;j++)
            {
                dp[i][j]=dp[i][j-1]; // not considared this eleemnt
                
                if(i >= arr[j-1])
                {
                    dp[i][j]=dp[i][j]||dp[i-arr[j-1]][j-1];
                }
                
            }
        }
        
        return dp[(sum/2)][N];
        
        return fun(N,arr,sum/2,0);
    }