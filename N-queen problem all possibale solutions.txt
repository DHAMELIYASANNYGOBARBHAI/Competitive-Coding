/******************************************************************************

                            Dhameliya_Sanny
                                DA-IICT
                          B-Tech(second year)
                            

*******************************************************************************/
#include "bits/stdc++.h"
#include <stdio.h>
using namespace std;

/*******  All Required define Pre-Processors and typedef Constants *******/
#define ll long long int 
#define loop(i,l,k) for (int i=l ; i<k ; i++)
#define rloop(i,l,k) for(int i=l-1;i>=k;i--)
#define pb push_back
#define F first
#define S second
#define all(c) (c).begin(),(c).end()
#define sz(v) (int)(v).size()
#define fast ios::sync_with_stdio(0); cin.tie(0); cout.tie(0)
typedef long double lld;
typedef pair<long long int,long long int> pll;
typedef vector<long long int > vi;
typedef vector<pair<long long,long long> > vpll;
#define MOD 998244353
#define N 500005
#define INF 1e9
#define NINF -1e9

//vector<vector<int>> vec( n , vector<int> (m, 0));


bool is_safe(ll x,ll y,vector<vector<ll>> &vec)
{
    ll n=vec.size();

    loop(i,0,x)    // same coloum not possible any queen
    {
        if(vec[i][y]==1)
            return false;
    }


    ll row=x;
    ll col=y;

    while(row>=0 && col>=0)  // left side digonal
    {
        if(vec[row][col]==1)
            return false;

        row--;
        col--;
    }

  

    row=x;
    col=y;

    while(row>=0 && col<n)  // right side digonal
    {
        if(vec[row][col]==1)
            return false;

        row--;
        col++;
    }




  
    return true;
}


bool fun(vector<vector<ll>> &vec,ll row,vector<vector<ll>> &ans)
{
    // base condition

      ll n=vec.size();

    if(row==n)
    {
        vector<ll>res;


        loop(i,0,n)
        {
            loop(j,0,n)
            {
                if(vec[i][j]==1)
                {
                      res.push_back(j+1);
                     
                }

            }


        }

        ans.push_back(res);

     


        return true;
    }


    bool res = false;

   loop(i,0,n)  // for all particular row for each  colom elemet
   {
       ll x = row;
       ll y = i;

       // is point is safe or not
      
      bool tem = is_safe(x,y,vec);

       

       if(tem)
       {
            vec[x][y]=1;


            


            res=(fun(vec,x+1,ans))||res;
            
            



            vec[x][y]=0;  // hear backtarcing

          

       } 
   }

   return res;
}


ll solve()
{
    ll n;
    cin>>n;
    
    vector<vector<ll>> vec( n , vector<ll> (n, 0)); // n rwo queen problem

    vector<vector<ll>>ans;

 

    fun(vec,0,ans);

    loop(i,0,ans.size())
    {
        loop(j,0,ans[i].size())
        {
            cout<<ans[i][j]<<" ";
        }

        cout<<endl;

    }

  

}

int main()
{

      ios_base::sync_with_stdio(false);
      cin.tie(NULL);

      #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      freopen("output1.txt", "w", stdout);
      #endif  
    
   
      ll t=1;
     //cin>>t;

       

     while(t--)
     {
        //cout<<"hii"<<endl;

         solve();
     }

    #ifndef ONLINE_JUDGE
     cout << "\nTime Elapsed: " << (1000.0 * clock()) / CLOCKS_PER_SEC << " ms \n";
    #endif

    return 0;
}