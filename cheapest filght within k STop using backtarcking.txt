class Solution {
public:
    int ans=INT_MAX;
    
  void fun(vector<vector<pair<int,int>>> &adj,vector<int> &visit,int s,int d,int k,int step,int curr_ans) 
  {
     // cout<<s<<" "<<d<<" "<<k<<" "<<step<<" "<<curr_ans<<endl;
      
      if(step > k)
          return;
      
      if(s==d)
      {
          ans=min(ans,curr_ans);
          //cout<<"hii"<<ans<<endl;
          return;
      }
      
      visit[s]=1;
      
      for(int i=0;i<adj[s].size();i++)
      {
          int child=adj[s][i].first;
          
          if(visit[child])
              continue;
          
        fun(adj,visit,child,d,k,step+1,curr_ans+adj[s][i].second);
          
       }
      
      visit[s]=0;
      
  }
    
int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int K) 
   {
      
   
       vector<int>visit(n,0);
       vector<vector<pair<int,int>>>adj(n);
    
       for(int i=0;i<flights.size();i++)
       {
          adj[flights[i][0]].push_back({flights[i][1],flights[i][2]}); 
       }
    
       fun(adj,visit,src,dst,K,-1,0);
    
    if(ans==INT_MAX)
        ans=-1;
    
      return ans;
   }
};